{"version":3,"file":"main.js","mappings":"qCAGO,MAAMA,EAKTC,WAAAA,CAAYC,GACRC,KAAKD,QAAUA,CACnB,CAKAE,WAAAA,CAAYF,GACRC,KAAKD,QAAQE,YAAYF,EAC7B,CAKAG,eAAAA,CAAgBC,GACZH,KAAKC,YAAYE,EAAUC,SAC/B,CAKAC,UAAAA,CAAWC,GACPN,KAAKC,YAAYK,EAAKP,QAC1B,EClBiB,IAAIQ,ICVX,ICEC,cAAoBV,EAK/BC,WAAAA,GAAsC,IAA1BU,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,gBACjBG,QACAZ,KAAKD,QAAUc,SAASC,eAAeN,EAC3C,E","sources":["webpack://magian-tools/./src/js/lib/Nyzul/engine/_node.js","webpack://magian-tools/./src/js/lib/Storehouse/data/data-store.js","webpack://magian-tools/./src/js/index.js","webpack://magian-tools/./src/js/lib/Nyzul/engine/nyzul.js"],"sourcesContent":["/**\n * A wrapper around HtmlElement that adds component functionality\n */\nexport class NyzulNode {\n    /**\n     * \n     * @param {HTMLElement} element \n     */\n    constructor(element) {\n        this.element = element;\n    }\n    /**\n     * appends an HTMLElement to this node\n     * @param {HTMLElement} element \n     */\n    appendChild(element) {\n        this.element.appendChild(element);\n    }\n    /**\n     * appends the render output of a component to the DOM tree of this node\n     * @param {Component} component \n     */\n    appendComponent(component) {\n        this.appendChild(component.render());\n    }\n    /**\n     * appends a node to this object\n     * @param {NyzulNode} node\n     */\n    appendNode(node) {\n        this.appendChild(node.element);\n    }\n}","import { sum } from \"./aggregators.js\";\nimport ArrayDataBlock from \"./array-data-block.js\";\nimport DataBlock from \"./data-block.js\"\nimport EnumDataBlock from \"./enum-data-block.js\";\n\n\n/**\n * @static\n */\nexport default class DataStore {\n    constructor() {throw new ReferenceError('reference to undeclared variable \"DataStore\"')}\n    \n    /** @type {Map<String, DataBlock>} */\n    static storage = new Map()\n\n    static registerProvider(key, startingValue = 0) {\n        DataStore.storage.set(key, new DataBlock(startingValue))\n        return [\n            (value) => {\n                DataStore.storage.get(key).setValue(value);\n            },\n            () => DataStore.storage.get(key)\n        ]\n    }\n\n    static registerArrayProvider(key, startingValue = []) {\n        DataStore.storage.set(key, new ArrayDataBlock(startingValue));\n        return [\n            (index, value) => {\n                DataStore.storage.get(key).setValueAtIndex(index, value)\n            },\n            () => DataStore.storage.get(key).value\n        ]\n    }\n    static registerEnumProvider(key, allowedValues, startingValue = allowedValues[0]) {\n        DataStore.storage.set(key, new EnumDataBlock(allowedValues, startingValue))\n        return [\n            (value) => DataStore.storage.get(key).setValue(value),\n            () => DataStore.storage.get(key).value\n        ]\n    }\n    static registerSubscriber(key, callback) {\n        return DataStore.storage.get(key).subscribe(callback);\n    }\n    static registerAggregateSubscriber(key, callback, aggregator = sum) {\n        const block = DataStore.storage.get(key)\n        return block.subscribeAggregate(callback, aggregator);\n    }\n    static hasProvider(key) {\n        return DataStore.storage.has(key);\n    }\n}","import EquipmentGrid from \"./components/equipment-grid.js\";\nimport { Nyzul } from \"./lib/Nyzul/index.mjs\";\n\nconst nyzul = new Nyzul();\n","import { NyzulNode } from \"./_node.js\";\n/**\n * The root object for all Nyzul projects\n * Every element you add to your page will hang off of this object.\n */\nexport default class Nyzul extends NyzulNode {\n    /**\n     * \n     * @param {String} rootId [default: 'pageContainer'] the html element to use as the root of your project\n     */\n    constructor(rootId = 'pageContainer') {\n        super();\n        this.element = document.getElementById(rootId);\n    }\n}"],"names":["NyzulNode","constructor","element","this","appendChild","appendComponent","component","render","appendNode","node","Map","rootId","arguments","length","undefined","super","document","getElementById"],"sourceRoot":""}